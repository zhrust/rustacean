<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>be Rustaceans ~ 成锈纪</title><link>https://rs.101.so</link><description>~ 汇集 大妈/Zoom.Quiet 学习/实践/探索/... Rust 世界锈迹, 一起成为 Rustacean 吧...</description><generator>my_rss_generator</generator><item><title>idiom6_7.md</title><link>https://rs.101.so//101/idiom6_7</link><pubDate>Tue, 09 May 2023 12:09:10 +0800</pubDate><content:encoded><![CDATA[# idiom#6+7 迭代列表

- [Iterate over list values](https://programming-idioms.org/idiom/6/iterate-over-list-values)
- [Iterate over list indexes and values](https://programming-idioms.org/idiom/7/iterate-over-list-indexes-and-values)

## Python

```python
[do_something(x) for x in items]

for x in items:
        doSomething( x )

for i, x in enumerate(items):
    print i, x

```


## Rust
```rust

items.into_iter().for_each(|x| do_something(x));

for x in items {
	do_something(x);
}

for (i, x) in items.iter().enumerate() {
    println!("Item {} = {}", i, x);
}

items.iter().enumerate().for_each(|(i, x)| {
    println!("Item {} = {}", i, x);
})

```



## Humm?

和 Python 基本相似;
不过, Rust 明显有更多内建函数支持各种姿势的嗯哼...


- [Iterator in std::iter - Rust](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.enumerate)
- ...






```
          _~∽~∽~_
      \/ /  = ◴  \ \/
        '_   ⎵   _'
        ( '-----' )

...act by ferris-actor v0.2.4 (built on 23.0303.201916)
```
]]></content:encoded></item><item><title>idiom5.md</title><link>https://rs.101.so//101/idiom5</link><pubDate>Sun, 07 May 2023 09:17:07 +0800</pubDate><content:encoded><![CDATA[# idiom#5 平面一点

[Create a 2D Point data structure](https://programming-idioms.org/idiom/5/create-a-2d-point-data-structure#)

## Python

```python

@dataclass
class Point:
    x: float
    y: float

Point = namedtuple("Point", "x y")
```


## Rust
```rust

struct Point {
    x: f64,
    y: f64,
}

struct Point(f64, f64);
```


## Elixir

```elixir
p = [ x: 1.122, y: 7.45 ]

```

## Humm?

和 Python 基本相似;



- [Functions - The Rust Programming Language](https://doc.rust-lang.org/book/ch03-03-how-functions-work.html)
- ...





```
      _~∽-∽~_
  () /  ☉ #  \ \/
    '_   V   _'
    | '--.--' \

...act by ferris-actor v0.2.4 (built on 23.0303.201916)
```


]]></content:encoded></item><item><title>idiom4.md</title><link>https://rs.101.so//101/idiom4</link><pubDate>Sun, 07 May 2023 09:14:50 +0800</pubDate><content:encoded><![CDATA[# idiom#4 构造函数

[Create a function](https://programming-idioms.org/idiom/4/create-a-function#)


## Python

```python

def square(x):
    return x*x

```


## Rust
```rust

fn square(x : u32) -> u32 { x * x }
```

## Humm?

和 Python 基本相似复杂度;
就是多出类型相关的声明,
不过, Python 要上了类型注解就更加像了...


- [Functions - The Rust Programming Language](https://doc.rust-lang.org/book/ch03-03-how-functions-work.html)
- ...





```
       _~^+-~_
   () /  ← #  \ ()
     '_   ⩌   _'
     ( '-----' /

...act by ferris-actor v0.2.4 (built on 23.0303.201916)
```]]></content:encoded></item><item><title>idiom3.md</title><link>https://rs.101.so//101/idiom3</link><pubDate>Sun, 07 May 2023 09:13:20 +0800</pubDate><content:encoded><![CDATA[# idiom#3 构造程序

[Create a procedure](https://programming-idioms.org/idiom/3/create-a-procedure)


## Python

```python

def finish(name):
    print(f'My job here is done. Goodbye {name}')

```


## Rust
```rust

fn finish(name: &str) {
    println!("My job here is done. Goodbye {}", name);
}

```

## Humm?

和 Python 基本相似复杂度;
就是多出类型相关的声明,
不过, Python 要上了类型注解就更加像了...


- [Functions - The Rust Programming Language](https://doc.rust-lang.org/book/ch03-03-how-functions-work.html)
- ...





```
       _~^+-~_
   () /  ← #  \ ()
     '_   ⩌   _'
     ( '-----' /

...act by ferris-actor v0.2.4 (built on 23.0303.201916)
```]]></content:encoded></item></channel></rss>